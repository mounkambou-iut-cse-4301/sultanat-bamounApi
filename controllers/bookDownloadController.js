const path = require('path');
const transporter = require('../utils/mailer');
const BookDownloadRequest = require('../models/BookDownloadRequest');

exports.requestDownload = async (req, res) => {
  try {
    const { name, email, phone, country, city, address, profession } = req.body;

    // V√©rification des champs requis
    if (!name || !email || !phone || !country || !city || !address || !profession) {
      return res.status(400).json({ message: "Tous les champs sont requis." });
    }

    // Enregistrement dans la base
    const request = await BookDownloadRequest.create({
      name,
      email,
      phone,
      country,
      city,
      address,
      profession
    });

    // Chemin vers le livre PDF
    const bookPath = path.join(__dirname, '../assets/books/HISTOIRE_DE_L_INTERNET_AU_CAMEROUN_VERSION_3_09062025.pdf');

    // Contenu de l‚Äôemail
    const mailOptions = {
      from: `"Internet.cm" <${process.env.SMTP_USER}>`,
      to: email,
      subject: "T√©l√©chargement du livre ‚Äì Histoire de l'Internet au Cameroun",
      text: `Bonjour ${name},

Nous vous remercions pour votre int√©r√™t.

Veuillez trouver en pi√®ce jointe le livre que vous avez demand√©. Ce document retrace l‚Äôhistoire de l‚ÄôInternet au Cameroun, ses d√©buts, ses √©volutions et son impact sur notre soci√©t√©.

Chez Internet.cm, nous croyons que l‚Äôacc√®s √† l‚Äôinformation est essentiel pour b√¢tir une soci√©t√© num√©rique forte, inclusive et durable. Ce livre fait partie de notre initiative pour documenter et partager notre patrimoine num√©rique.

Si vous avez des questions ou souhaitez en savoir plus, n‚Äôh√©sitez pas √† nous contacter.

Bien cordialement,  
L‚Äô√©quipe Internet.cm

üìß info@internet.cm  
üåç www.internet.cm`,
      attachments: [
        {
          filename: 'HISTOIRE_DE_L_INTERNET_AU_CAMEROUN_VERSION_3_09062025.pdf',
          path: bookPath,
          contentType: 'application/pdf'
        }
      ]
    };

    // Envoi de l‚Äôe-mail
    await transporter.sendMail(mailOptions);

    return res.status(200).json({
      message: `Livre envoy√© √† ${email}`,
      request_id: request.id
    });

  } catch (error) {
    console.error('‚ùå Erreur envoi email de t√©l√©chargement :', error);

    if (error.name === 'SequelizeValidationError') {
      return res.status(400).json({
        message: "Erreur de validation.",
        details: error.errors.map(e => e.message)
      });
    }

    return res.status(500).json({ message: "Erreur interne du serveur." });
  }
};
exports.getAllDownloadRequests = async (req, res) => {
  try {
    const requests = await BookDownloadRequest.findAll({
      order: [['createdAt', 'DESC']]
    });

    return res.status(200).json(requests);
  } catch (error) {
    console.error('‚ùå Erreur r√©cup√©ration demandes:', error);
    return res.status(500).json({ message: 'Erreur interne du serveur.' });
  }
};
